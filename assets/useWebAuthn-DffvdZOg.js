import{r as h}from"./main-CdLwLdj7.js";function a(r){const i=new Uint8Array(r);let c="";for(const s of i)c+=String.fromCharCode(s);return btoa(c).replace(/\+/g,"-").replace(/\//g,"_").replace(/=/g,"")}function u(r){let i=r.replace(/-/g,"+").replace(/_/g,"/");const c=(4-i.length%4)%4;i+="=".repeat(c);const s=atob(i),l=new ArrayBuffer(s.length),o=new Uint8Array(l);for(let e=0;e<s.length;e++)o[e]=s.charCodeAt(e);return l}const g=()=>{const[r,i]=h.useState(!1);h.useEffect(()=>{i(typeof window<"u"&&navigator.credentials&&typeof PublicKeyCredential<"u")},[]);const c=h.useCallback(async l=>{if(!r)throw new Error("WebAuthn is not supported on this device.");const o=await fetch("/api/passkey/register-options",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:l})});if(!o.ok)throw new Error("Failed to get registration options from server.");const e=await o.json();e.challenge=u(e.challenge),e.user.id=u(e.user.id);const t=await navigator.credentials.create({publicKey:e});if(!t)throw new Error("Registration failed or was cancelled.");const n=t.response,w={id:t.id,rawId:a(t.rawId),type:t.type,response:{clientDataJSON:a(n.clientDataJSON),attestationObject:a(n.attestationObject)}},f=await fetch("/api/passkey/register-verify",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(w)});if(!f.ok)throw new Error("Failed to verify registration on server.");const p=await f.json();if(!p.verified)throw new Error("Server could not verify the registration.");return p},[r]),s=h.useCallback(async l=>{if(!r)throw new Error("WebAuthn is not supported on this device.");const o=await fetch("/api/passkey/login-options",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:l})});if(!o.ok){const d=await o.json();throw new Error(d.message||"No passkeys found for this email.")}const e=await o.json();e.challenge=u(e.challenge),e.allowCredentials.forEach(d=>{d.id=u(d.id)});const t=await navigator.credentials.get({publicKey:e});if(!t)throw new Error("Login failed or was cancelled.");const n=t.response,w={id:t.id,rawId:a(t.rawId),type:t.type,response:{clientDataJSON:a(n.clientDataJSON),authenticatorData:a(n.authenticatorData),signature:a(n.signature),userHandle:n.userHandle?a(n.userHandle):null}},f=await fetch("/api/passkey/login-verify",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(w)});if(!f.ok)throw new Error("Failed to verify login on server.");const p=await f.json();if(!p.verified)throw new Error("Server could not verify the login assertion.");return p},[r]);return{isWebAuthnSupported:r,register:c,login:s}};export{g as u};
